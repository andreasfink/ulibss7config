<?xml version="1.0" encoding="UTF-8"?>
<SearchIndexes Version="1.0">
    <Documents>
        <Document ID="FEFF1BE0-0533-4736-8DCC-69D77CDEADA7">
            <Title>Writing History</Title>
            <Text>Scrivener keeps track of how many words and characters you write every day. To see a breakdown of how many words you’ve written each day and month for a particular project, go to Project &gt; Writing History…</Text>
        </Document>
        <Document ID="061A587E-23F1-412E-B4D4-8126D00CEC82">
            <Title>m2pa</Title>
        </Document>
        <Document ID="0FCDC80B-6DA4-4CE2-BE72-81C6BEC48DF2">
            <Title>ss7-filter-engine-sms</Title>
            <Text>SS7 Filter engine “sms”
The configuration of the sms engine is a json dictionary with the following fileds
	tag = {tag1,tag2,….}
	custom1 = {value}
	custom2 = {value}
	custom3 = {value}
	custom4 = {value}
	custom5 = {value}
	custom6 = {value}
	custom7 = {value}
	custom8 = {value}
	custom9 = {value}
	custom10 = {value}

	gsm-map-operation-code = {int}
	gsm-map-operation-code-list = {named-list}

	application-context = {int}
	application-context-list = {named-list}

	application-context-version = {int}
	application-context-version-list = {named-list}

	sms-type = {MO or MT}
	application-context = {namedlist-name}
	sms-sender-ton = {int}
	sms-sender-npi = {int}
	sms-sender-number-list = {named-list}
	sms-sender-prefix-list = {named-list}
	sms-receiver-ton = {int}
	sms-receiver-npi = {int}
	sms-receiver-number-list = {named-list}
	sms-receiver-prefix-list = {named-list}
	smsc-ton = {int}
	smsc-npi = {int}
	smsc-number = {number}
	smsc-number-list = {named-list}
	smsc-prefix = {number-prefix}
	smsc-prefix-list = {named-list}

The category is a element which can be set by other filters. If it is set and not set to “any” then the filter would only apply if the category matches. 
If gsm-map-operation-code is set, then this rule only applies to packets with this operation code. Otherwise it applies to all. Operation codes can also be negated by having a “!” in front of them.
If application-context is set, then this rule only applies to packets with this application-contex. Otherwise it applies to all. It can also be negated by having “!” in front of the entries.
sccp-calling-address-blacklist-action is the action taken if the sccp-calling-address-blacklist test is failing. The
The sccp-calling-address-blacklist will call the action “drop” or the actionif the SCCP calling address is found in the list with the indicated name. This requires an exact match.
The sccp-calling-prefix-blacklist will call the action “drop” if a prefix is found in the named list which is matching the beginning of the SCCP calling address.</Text>
        </Document>
        <Document ID="5B6A71AB-0851-4292-A20D-1B8CF2B9F9DA">
            <Title>ss7-filter-action</Title>
            <Text>SS7 Filter Action

In the config file:
group = ss7-filte-action
name = {object-name}
action = { “pass” | “drop” | “log” \ “reroute” }
log = {ss7-logfile-object-name}
reroute =  {sccp-destination-name}
description = {text}


As API calls
To add a new filter-action
/api/ss7-filter-action-add?name={name}
	&amp;action={ “pass” | “drop” | “log” \ “reroute” }
	&amp;log={ss7-logfile-object-name}
	&amp;reroute={sccp-destination-name}


To remove a filter-action
/api/ss7-filter-action-delete?name={name}

To list all filter-actions in the system
/api/ss7-filter-action-list

To read the filter-action-config
/api/ss7-filter-action-read?name={name}

To read the current engine status
/api/filter-action-status?name={name}

To send an action to the filter action
/api/filter-action-action?name={name}&amp;action={action}

</Text>
        </Document>
        <Document ID="34DF7338-9EA3-45FA-AD07-133E8AC4F870">
            <Title>builtin-ss7-filter-actions</Title>
            <Text>Built in SS7 Filter Actions

There are several predefined actions.

	pass	

the filtering ruleset procesing is stopped and the packet is forwarded normally


	drop

the filtering ruleset procesisng is stopped and the packet is dropped.


	abort

the filtering ruleset processing is stopped and a tcap abort message is sent back.


	reject

the filtering ruleset processing is stopped and a tcap end with a gsmmap reject message is sent back.

	error(errorcode)

the filtering ruleset processing is stopped and a tcap end with a gsmmap ReturnError message is sent back with an indicated eror

	continue

the filtering ruleset is continued on the next filtering rule.

	log(logfile)

the packet is logged to the indicated logfile object.

	reroute(destination,new-called-address)

the packet is rerouted to another destination and the called address is replaced if set.

	add-tag(tag)
	clear-tag(tag)
	clear-all-tags

the tag is set or cleared. Note a packet can have multiple tags.  clear-all-tags would clear them all;                              


	set-custom(customvar,value)

sets a custom field to a specific value.
</Text>
        </Document>
        <Document ID="CEEBA583-25B7-4CBC-964C-1D8118AE1D68">
            <Title>Inserting Images</Title>
            <Text>To insert an image into your manuscript:
	1.	Click into the editor and place the cursor where you would like the image to be inserted.
	2.	Go to Insert &gt; Image From File… in the main menu.
	3.	Select the image file you would like to insert.
Alternatively, drag an image from the Finder (or an image file from the binder) into the editor.
Note that you do not use File &gt; Import &gt; Files… or drag images into the binder from the Finder to import images. Importing images into the binder creates an image document. Image documents are used for research or reference and are not part of your manuscript.</Text>
        </Document>
        <Document ID="8BD52013-34A8-4BB8-9949-68E924397D3B">
            <Title>Editor Text Width</Title>
            <Text>By default, Scrivener’s editor uses a “fixed width”, so that when the editor is expanded beyond a certain width, the text will appear as a column in its centre. If you would prefer the text to take up the full width of the editor, you can turn this behaviour off via the Preferences:
	1.	Go to Scrivener &gt; Preferences… in the main window.
	2.	Select the “Appearance” tab at the top.
	3.	Select “Main Editor” from the sidebar.
	4.	Deselect “Use fixed width editor”.
</Text>
        </Document>
        <Document ID="2DBD1580-CB10-498F-B5B7-CDBF1EFEA460">
            <Title>sctp</Title>
            <Text>M2PA Config Options
group = m2pa
name = {object-name}
name of the object. Internally converted to lowercase. only a-z, 0-9 and . - _ + , = allowed. Maximum length 255 characters.

description = {text}
descriptive text for internal documentation purposes

category = {text}
category text for internal documentation purposes

enable = {boolean}
If set to NO, then the whole section is completely ignored. Defaults to YES

log-level = {log-level}
log level has the following values:
0 = debug
1 = info
2 = warning
3 = minor
4 = major
5 = panic

log-file = {filename}
logfile name

local-ip = {ip-addresses}
local ip address or addresses, separated by space, tab or semicolon. Can be IPv4 as well as IPv6 addresses.  line can also appear multiple times.

local-port = {integer}
sctp port on the local side

remote-ip = {ip-address(es)}
local ip address or addresses, separated by space, tab or semicolon. Can be IPv4 as well as IPv6 addresses. line can also appear multiple times.

remote-port = {integer}
sccp port of the remote side

passive = {boolean}
If passive is set to YES, then no active outbound connection is established. but incoming connections are accepted. If passive is set to NO, the connection is established inbound and outbound. Defaults to NO

heartbeat = {seconds}
If heartbeat is set to a value above 0, the SCTP layer is instructed to run a heartbeat on the SCTP connection. The default is 30 seconds.

mtu = {bytes}
If mtu is set, the maximum packet size for outgoing IP packets is set to this value. Normally it is automatically negotiated. setting this value actually</Text>
        </Document>
        <Document ID="B6AB4BEE-9C02-494E-9CFA-C27CBF9EC34B">
            <Text>Terminology

A filter-engine is a piece of code which can do certain type of filtering.

A filter-config is a set of parameters which configure a filter-engine. Filter-config are specific to the engine type while they share some common parameters.

A filter-rule is a combination of a filter-engine with a specific filter-config

A filter-set is a list of filter-rules in a specific order.

An application-point is the point in the message flow where the filters are being placed on. It can be on a specific inbound link or on a specific outbound link or in the routing phase.

A filter-action is a trigger which is telling  the system what to do with this packet. Some filter-actions are exclusive (like route it to a specific output port) some could be applicable multiple times such as send a copy of the packet to a debug log A and to debug log B.


A named-list is a list of items with a name. Such a list can be used in multiple places for multiple different types.
For example you can make a list of specific numbers to monitor and refer to this list in multiple places through its name.

When a filter-set is put into action at an application-point, then the sequence of filter-rules is being processed and filter-actions are being collected and applied along the way.


The folowing section descripe the parameters of each object. The objects will be manageable by a generic API wihere the parameters are named exactly the same way.
</Text>
        </Document>
        <Document ID="F3AFB259-EAF0-4413-8466-484C3829A913">
            <Title>Default Formatting</Title>
            <Text>Changing the Default Formatting for New Documents
You can change the default formatting used for new documents like this:
	1.	In the editor, set up some text with the formatting you want to use for all new documents, and ensure the cursor is inside it.
	2.	From the main menu, select Scrivener &gt; Preferences…
	3.	Select “Editing” in the toolbar.
	4.	Select the “Formatting” tab.
	5.	Click the “Use Formatting in Current Editor” button.
From now on, whenever you create a new blank document and start typing, the text will the formatting you set up in (1).
Alternatively, instead of setting up the text in the editor, you can set the formatting in the text area of the Editing &gt; Formatting pane in the Preferences.
Changing the Default Formatting for Only a Single Project
Sometimes, you may have a project that needs to use different default formatting from other projects. You can set this up as follows:
	1.	From the main menu, select Project &gt; Project Settings…
	2.	Select “Formatting” in the sidebar.
	3.	Set up the text in the “Main Text Formatting” text area, or click on the “Use Current” button to use the formatting in the current editor.
NOTE: This tutorial is set up to use this option.
Applying Default Formatting to Existing Documents
Setting the default formatting in the Preferences or Project Settings has no effect on existing documents. (Scrivener could ruin special formatting you have applied if it changed the formatting for all your documents automatically every time you changed the preferences.) To apply the default formatting to existing documents:
	1.	In the binder, select the documents you want to update.
	2.	From the main menu, select Documents &gt; Convert &gt; Text to Default Formatting…
	3.	Check the options in the panel that appears and then click “OK”.
</Text>
        </Document>
        <Document ID="55F73956-608F-4C02-A38F-E183FC87F5A5">
            <Title>ss7-log-file</Title>
            <Text>SS7 Log File
In the config file:
group = ss7-log-file
name = {object-name}
file = {filename}
format = { pcap | text }
rotate-minutes = {minutes}
rotate-packets = {packets-count}
enable = {boolean}


As API calls
To add a new log file object
/api/ss7-log-file-add?name={name}
	&amp;file={filename}
	&amp;format={“text” | “pcap”}
	&amp;rotate-minutes={minutes}
	&amp;rotate-packets={packets-count}
	&amp;enable={boolean}

To start logging
/api/ss7-log-file-modify?name={name}&amp;enable=YES

To stop logging
/api/ss7-log-file-modify?name={name}&amp;enable=NO

To remove a log-file-object
/api/ss7-log-file-remove?name={name}

To list all log-file objects
	/api/ss7-log-file-list
To read the current log-file-object config
/api/ss7-log-file-read?name={name}

To send an action to the log-file-object
/api/ss7-log-file-action?name={name}&amp;action={action}

Action can be “reopen”
</Text>
        </Document>
        <Document ID="49285E78-17D8-48C9-BF56-A08381016832">
            <Title>ss7-filter-engine-screening</Title>
            <Text>SS7 Filter engine “screening”
The configuration of the screening engine is a json dictionary with the following objects

	tag = {tag1,tag2,…}
	custom1 = {value}
	custom2 = {value}
	custom3 = {value}
	custom4 = {value}
	custom5 = {value}
	custom6 = {value}
	custom7 = {value}
	custom8 = {value}
	custom9 = {value}
	custom10 = {value}

	gsm-map-operation-code = {int}
	gsm-map-operation-code-list = {named-list}

	application-context = {int}
	application-context-list = {named-list}

	application-context-version = {int}
	application-context-version-list = {named-list}

	sccp-calling-address-ton = {integer}
	sccp-calling-address-npi = {integer}
	sccp-calling-address-number-list = {namedlist-name}
	sccp-calling-address-prefix-list = {namedlist-name}

	sccp-called-address-ton = {integer}
	sccp-called-address-npi = {integer}
	sccp-called-address-number-list = {namedlist-name}
	sccp-called-address-prefix-list = {namedlist-name}

	originating-pointcode-list = {namedlist-name}
	destination-pointcode-list = {namedlist-name}

	imsi-prefix-list = {namedlist-name}


The tag is a element which can be set by other filters. If it is set and not set to “any” then the filter would only apply if the tag matches.
If a tag name is set with a ! in front, this means the tag must not be present. Individual tags are separated by a comma and all the conditions listed in the tag statement must apply.
custom1 .. custom10 are similar field which can be used in results.
If gsm-map-operation-code is set, then this rule only applies to packets with this operation code. Otherwise it applies to all. Operation codes can also be negated by having a “!” in front of them.
If application-context is set, then this rule only applies to packets with this application-contex. Otherwise it applies to all. It can also be negated by having “!” in front of the entries.

</Text>
        </Document>
        <Document ID="450A4A7B-5E13-4317-B127-B1D2C02B9F98">
            <Title>ss7-filter-rulesset</Title>
            <Text>SS7 Filter Ruleset
group = ss7-filte-ruleset
name = {object-name}
description = {text}
status = { on | off | monitor }

As API calls
To add a new filtering ruleset
/api/filter-ruleset-add?name = {object-name}
	&amp;description={description}
   &amp;status={status}


To remove a filtering ruleset
/api/ss7-filter-ruleset-delete?name={name}

To activate a rule
/api/ss7-filter-ruleset-modify?name={name}
	&amp;status=on

This switches all individual filtering rules to status on.

To deactivate a rule
/api/ss7-filter-ruleset-modify?name={name}&amp;status=off

This switches all individual filtering rules to status pff.

To put rule in monitoring mode
/api/ss7-filter-ruleset-modify?name={name}&amp;status=monitor

This switches all individual filtering rules to status pff.

In monitor mode, all actions do take the monitor-action-list instead of the active-action-list. If status is set to off, the bypass-action-list is taken which defaults to continue.
To read the list of  known rulesets in the config
/api/ss7-filter-ruleset-list

To read the current ruleset config
/api/ss7-filter-ruleset-read?name={name}

To read the current rule status
/api/filter-ruleset-status?name={name}

To send an action to the rule
/api/filter-ruleset-action?name={name}&amp;action={action}

</Text>
        </Document>
        <Document ID="7182E87F-7F90-4143-B2F6-46984140486D">
            <Title>Transcription</Title>
            <Text>Transcribing audio and media files in Scrivener is easy with the split view. Try the following:
	1.	Split the editor vertically or horizontally.
	2.	Click into one of the editors.
	3.	In the binder, select “ThisIsBuzzAldrin” inside the “Research” folder so that it loads in the editor. “ThisIsBuzzAldrin” is an audio file, so you won’t see much other than the play controls when you mouse over the editor. (Actually, that audio file is the beginning of the coolest phone message I ever picked up; sadly, the message was not for me).
Now you can play the audio file in one editor while typing in the other.
You can control the media file using the keyboard shortcuts defined in the Navigate &gt; Media menu. Cmd-Return will play or pause the file, for instance, without your having to click away from your typing.
Also note the button in the left of the media file’s footer bar:
#

That is the “pause and rewind” button. If you click it, it will turn blue, indicating that it is on. When “pause and rewind” is turned on, whenever you pause the media file it will automatically be rewound a couple of seconds (you can determine exactly how many seconds it gets rewound in the Behaviors pane of the Preferences, under “Playback”). This is very useful for transcription.</Text>
            <Comments>it was for my wife, a journalist, who was to interview him. Still, Buzz Aldrin! Calling my phone! Well, it impressed me.</Comments>
        </Document>
        <Document ID="283A710B-DE5F-4B32-9F7A-47F08B8E8C3A">
            <Title>Resetting the Tutorial</Title>
            <Text>If at any time you decide you want to wipe all of your edits and restore the tutorial to its original state, follow these steps:
	1.	Ctrl-click or right-click on the project title right at the very top of the tutorial project window. A menu will appear showing the path to the project.
	2.	Click on the second item in the menu, which will be the folder in which the tutorial project is stored. This will open a Finder window.
	3.	Close the tutorial project in Scrivener.
	4.	In the Finder window that opened in (2), move the tutorial project to the Trash in your Dock.
	5.	Back in Scrivener, go to Help &gt; Interactive Tutorial… You will be prompted to create a fresh tutorial project.</Text>
        </Document>
        <Document ID="ADBA31A8-074A-4575-B8CF-3E39F39B44B9">
            <Title>ss7-filter-engine</Title>
            <Text>SS7 Filter Engine 

In the config file:
group = ss7-filte-engine
name = {object-name} filename = {filename} enable = {boolean}

As API calls
To add a new engine from a shared libary file:
/api/ss7-filter-engine-add?name={name}
	&amp;file={filename}

To remove an engine
/api/ss7-filter-engine-delete?name={name}

To activate an engine
/api/ss7-filter-engine-modify?name={name}&amp;enable=YES

To deactivate an engine
/api/ss7-filter-engine-modify?name={name}&amp;enable=NO

To list the current engine names
/api/ss7-filter-engine-list

To read the current engine config
/api/ss7-filter-engine-read?name={name}

To read the current engine status
/api/ss7-filter-engine-status?name={name}

To reload a new version of the engine file
	/api/ss7-filter-engine-action?name={name}&amp;action=reload
</Text>
        </Document>
        <Document ID="C330BA89-15FA-4CF2-8950-53C47B8417BA">
            <Title>ss7-filter-action</Title>
            <Text>SS7 Filter Action

In the config file:
group = ss7-filte-action
name = {object-name}
action = { “pass” | “drop” | “log” \ “reroute” }
log = {ss7-logfile-object-name}
reroute =  {sccp-destination-name}
description = {text}


As API calls
To add a new filter-action
/api/ss7-filter-action-add?name={name}
	&amp;action={ “pass” | “drop” | “log” \ “reroute” }
	&amp;log={ss7-logfile-object-name}
	&amp;reroute={sccp-destination-name}


To remove a filter-action
/api/ss7-filter-action-delete?name={name}

To list all filter-actions in the system
/api/ss7-filter-action-list

To read the filter-action-config
/api/ss7-filter-action-read?name={name}

To read the current engine status
/api/filter-action-status?name={name}

To send an action to the filter action
/api/filter-action-action?name={name}&amp;action={action}

</Text>
        </Document>
        <Document ID="3BE2E524-FBE2-4E4C-BBB8-7015A3A780DB">
            <Title>Name &amp; Address in Templates</Title>
            <Text>Some project templates use information from Contacts to populate title pages with your name and address. By default, it takes this information from “My Card” in Contacts. If you would like Scrivener to use a different Contacts card, simply type “(Scrivener:UseMe)” (with no spaces and including the parentheses) somewhere in the “note” area of the entry in Contacts you wish to use.
Even easier: Go to Scrivener &gt; Preferences and enter your details in the “Author Information” section of the “General” pane.</Text>
        </Document>
        <Document ID="EAC1A67A-FFE2-40CB-8E2C-DBFBB8963E51">
            <Title>Multiple Books in One Project</Title>
            <Text>Generally, Scrivener is set up to assume that each project contains a single book (or writing project): when you compile, you compile the entire Draft folder into a single manuscript. However, you don’t have to work this way. Perhaps you are working on a series of books that rely on the same research, for instance—in that case, you might want to set up a project to contain multiple books. Here’s how:
	1.	Inside the Draft folder, setup a subfolder for each book.
	2.	Treat each subfolder inside the Draft folder as though it were the Draft folder for one of your books, creating your chapters for each book inside the book subfolder.
	3.	Adjust the section type settings under “Default Types by Structure” in Project Settings as necessary, so that they correctly reflect the updated structure.
Then, when you want to compile one of the books:
	1.	Go to File &gt; Compile…
	2.	Above the list of documents on the right side of the Compile panel, click on the pop-up menu next to where it says “Compile” (this pop-up normally shows the name of your Draft folder).
	3.	Select the folder containing the book you wish to compile.
	4.	Tick “Treat compile group as complete manuscript”. This tells Scrivener that the folder you are compiling should be treated as though it is a complete book and not part of a larger draft.
	5.	Ensure “Include text of containing group” is not ticked.
</Text>
        </Document>
        <Document ID="2C374A60-A214-4EC8-B992-D22EC23805C6">
            <Title>ss7-log-file</Title>
            <Text>SS7 Log File

In the config file:
group = ss7-log-file
name = {object-name}
file = {filename}
format = { pcap | text }
rotate-minutes = {minutes}
rotate-packets = {packets-count}
enable = {boolean}


As API calls
To add a new log file object
/api/ss7-log-file-add?name={name}
	&amp;file={filename}
	&amp;format={“text” | “pcap”}
	&amp;rotate-minutes={minutes}
	&amp;rotate-packets={packets-count}
	&amp;enable={boolean}

To start logging
/api/ss7-log-file-modify?name={name}&amp;enable=YES

To stop logging
/api/ss7-log-file-modify?name={name}&amp;enable=NO

To remove a log-file-object
/api/ss7-log-file-remove?name={name}

To list all log-file objects
	/api/ss7-log-file-list
To read the current log-file-object config
/api/ss7-log-file-read?name={name}

To send an action to the log-file-object
/api/ss7-log-file-action?name={name}&amp;action={action}

Action can be “reopen”
</Text>
        </Document>
        <Document ID="AD5A950A-4FB6-448E-BAFD-06D01A94FB2F">
            <Title>Focus on Dialogue</Title>
            <Text>Scrivener features a “Linguistic Focus” feature that allows you to fade out other text in the editor except for certain speech types. For instance, you can fade out everything except your adverbs, to check for overuse.
You can bring up the Linguistic Focus panel by going to Edit &gt; Writing Tools &gt; Linguistic Focus… in the main menu. Then simply select a part of speech to focus on.
This feature uses linguistic analysis tools that are built into macOS, but it also adds something else: dialogue focus. Selecting “Direct Speech” as the focus will fade out all text except for that contained between speech marks. If you are writing a novel or story, this is a great way of checking the flow of a conversation you have written without being distracted by all of the action and attributions.</Text>
        </Document>
        <Document ID="6D828CCA-4E77-4351-8232-37CEC74267EF">
            <Title>ss7-filter-engine-location</Title>
            <Text>SS7 Filter engine “location”
This filter engine wll check the location
Location process could be enhanced by adding some checks at the reception of a new LocationUpdate (or UpdateGPRSLocation). 
“Check Location” could be implemented in various ways: 
 - Compare with the previous location: analyse if it is physically possible to move from the previous country to this new one - Check the status on the previous VLR by sending, for example, a PSI message to the old VLR and check that the user is no longer active on this old VLR before sending the CancelLocation 
-  Update the VLR address in the HLR database before sending the LocationUpdate Ack or at TCAP-End
 - Correlate the LocationUpdate (or UpdateGPRSLocation) with MAP messages generated earlier in order to verify that VLRid is not faked, like a successful authentication on the same MSC /VLR or SGSN/VLR (SendAuthenticationInfo). 
The configuration of this module is still under review. This is a stateful filter which is a tricky one.
</Text>
        </Document>
        <Document ID="8CFD9FCD-5399-44E3-B956-B43B9A817176">
            <Title>ss7-filter-staging-area</Title>
            <Text>SS7-Filter Staging Area
A staging area is a environment where modifications on to objects can be done while not being used.
A staging area can become a  live config and a new staging area can be created. In terms of config files, this will be represented as individual config directories and a symbolic link to the active one.



As API calls
To create a new staging area
	/api/ss7—filter-staging-area-add?name={name}

To delete a staging area
/api/ss7-filter-staging-area--delete?name={name}

To copy a staging area to another
/api/ss7-filter-staging-area--action?name={source-name}
	&amp;action=copy
	&amp;destination-to={destination-name}

To activate a current staging area
/api/ss7-filter-staging-area-action?name={name}
	&amp;action=activate

To list current staging areas
/api/ss7-filter-staging-area-list

To select the staging area to edit  engine status
/api/ss7-filter-staging-area-action?name={name}
	&amp;action=select

</Text>
        </Document>
        <Document ID="56421FB1-8CEF-4276-A0B0-3380A639818E">
            <Title>*** Syncing with iOS</Title>
            <Text>Sometimes you will want numbers to appear in the text whose value may change depending on the arrangement of the text. For instance, you might want to title a document “Chapter 1”, but if you move it later, it might become “Chapter 2”. For this, you can use “placeholders”.
To insert an auto-number placeholder, go to Insert &gt; Auto-Number in the main menu and pick a number type. A tag will be inserted into the text. For example, if you select “1, 2, 3, 4, 5…”, the following tag will be inserted:
&lt;$n&gt;
This tag will be replaced with a number when using Compile. There are many other placeholders you can use in Scrivener—a full list is available from Help &gt; List of All Placeholders…
You can use placeholders in the text, in document titles, or in your own Compile formats. Many of the Compile formats provided with Scrivener use placeholders to insert chapter numbering. To see this, try the following:
	1.	Go to File &gt; Compile…
	2.	Select “Manuscript (Times)” from the Formats sidebar.
	3.	Click on the “+” button in the footer.
	4.	Select “Duplicate &amp; Edit Format…” from the menu that appears. The Compile window will change to show the options for creating a format.
	5.	Ensure “Section Layouts” is selected in the sidebar.
	6.	Select “Chapter Heading” in the section layouts list.
	7.	Select the “Title Options” tab.
You will see that the “Title Prefix” text box contains the following text:
Chapter &lt;$t:chapter&gt;

This is what adds “Chapter One”, “Chapter Two” and so on to the start of each chapter when you use the “Manuscript (Times)” format to compile your manuscript.</Text>
        </Document>
        <Document ID="5D8E0756-3F6F-4987-9145-6E701AEB2F5B">
            <Title>Name Generator</Title>
            <Text>Having problems coming up with character names? Scrivener comes with a name generator, available from Edit &gt; Writing Tools &gt; Name Generator…</Text>
        </Document>
        <Document ID="AF26B6D2-5440-468E-B462-50F944603E0B">
            <Title>ss7-filter-staging-area</Title>
            <Text>SS7-Filter Staging Area
A staging area is a environment where modifications on to objects can be done while not being used.
A staging area can become a  live config and a new staging area can be created. In terms of config files, this will be represented as individual config directories and a symbolic link to the active one.



As API calls
To create a new staging area
	/api/ss7—filter-staging-area-add?name={name}

To delete a staging area
/api/ss7-filter-staging-area-delete?name={name}

To copy a staging area to another
/api/ss7-filter-staging-area-action?name={source-name}
	&amp;action=copy
	&amp;destination={destination-name}

To activate a current staging area
/api/ss7-filter-staging-area-action?name={name}
	&amp;action=activate

To list current staging areas
/api/ss7-filter-staging-area-list

To select the staging area to edit  engine status
/api/ss7-filter-staging-area-action?name={name}
	&amp;action=select

Note: the selected staging area is specific to the current session.
</Text>
        </Document>
        <Document ID="536EEE38-3356-4886-B6B9-EF5EE9B4FBD5">
            <Title>Dragging in the Binder &amp; Outliner</Title>
            <Text>By default, when you drag items around in the binder or outliner, you can drop them on other items as well as between them. Dropping “on” an item places the dropped document inside the document it was dropped on, as a subdocument.
Holding the Option key down while dragging restricts this behaviour so that you can only drop between documents—this can be useful when you want a little more accuracy.</Text>
        </Document>
        <Document ID="D6A13B52-F190-4530-9C60-7D4C6DCDE628">
            <Title>START HERE</Title>
            <Text>#
Welcome to the Tutorial
Welcome to Scrivener! This tutorial is a Scrivener project, just like the ones you’ll create for your own writing. It will introduce you to all the main features of the software by getting you to use them. Once you’ve finished the tutorial, go to File &gt; New Project to begin your own project.
Feel free to experiment and edit this tutorial as you go. If at any time you decide you want to restore the tutorial to its original state, follow the instructions in “Resetting the Tutorial”, which you will find inside the “Tips” section in the sidebar (click on the triangle next to the lightbulb icon to view the tips).
How to Use This Tutorial
This tutorial is divided into three main sections, each indicated by a yellow icon in the sidebar.
	1.	The Basics covers everything you need to know to start using Scrivener. You should read it in order, and it should take just over an hour to go through. Once you’ve been through this section, you’ll know everything you need to know to create your own projects and use Scrivener efficiently.
	2.	Going Further covers various useful tools and features in a little more depth. It is designed for dipping into, so you don’t need to read it in order. Whenever you feel like learning more, open up the tutorial and browse through the list of subjects in this section.
	3.	Tips contains (you guessed it) a selection of short tips. As with “Going Further”, dip into this section whenever you feel like it.
If you’re new to Scrivener, therefore, work your way through “The Basics” and then create your own project and get writing. When you’re feeling at home, come back and explore “Going Further” and “Tips” (to what I believe the kids call “level up”).
Note to Scrivener 2 users: If you’re not new to Scrivener and previously used Scrivener 2, check out the “What’s New in Scrivener 3” collection (click on the new “View” button, leftmost in the toolbar, and select Show Collections to open the collections area).
Some Tips Before You Begin
	•	Scrivener contains many powerful tools, but you don’t have to use (or even know about) them all. Just use what’s useful to you and don’t worry about the rest. Once you know the basics, you can look into other features when you feel you need them.
	•	If the text is a little small for your liking, change the text zoom by going to View &gt; Zoom or using the percentage button below the text.
	•	You might find it helpful to turn on toolbar titles while going through the tutorial. To do so, Ctrl-click anywhere on the toolbar (the band of icons at the very top of the window) and select “Icon and Text” from the menu that appears.
	•	This tutorial assumes that you are using the default preferences. If necessary, you can reset them to the defaults by clicking on the “Defaults” button in the Preferences pane, available under Scrivener &gt; Preferences…
Before diving into the tutorial proper, click on “Key Concepts” in the list on the left to get familiar with the core ideas behind Scrivener.</Text>
        </Document>
        <Document ID="AF621794-7D82-4A10-A93C-092DDCDFFBF4">
            <Title>Locking the Editor</Title>
            <Text>Sometimes you will want to navigate through the binder while keeping the document in the editor pinned in place. “Lock in Place” allows this:
	1.	Ctrl-click on the header view to bring up the header bar menu.
	2.	Select “Lock in Place”.
The header bar will turn pink, indicating that the editor is now “locked”. When an editor is locked, clicks in the binder have no effect on it.
If you have split the editor so that two editors are visible on screen, clicks in the binder will go to the unlocked editor, no matter where the focus is. (You can turn off this behaviour via the “Behaviors” Pane of the Preferences, under “Navigation” in the sidebar.)
Ctrl-click on the header and deselect “Lock in Place” to remove the lock.</Text>
        </Document>
        <Document ID="4106C7BE-5736-448C-AF81-6BD69AC89E17">
            <Title>Scratch Pad and Clippings</Title>
            <Text>If you have to gather a lot of research in other applications and find yourself doing a lot of copying and pasting into Scrivener, the Scratch Pad and clippings features may come in handy.
Scratch Pad
The scratch pad is a panel that can be called up from any other application using a keyboard shortcut that you set in the “General” pane of the Preferences (the default shortcut is Shift-Cmd-Return). You can paste or type notes into it and send them to one of your open projects either straight away or at some point later (scratch pad notes are saved in a folder on your hard drive that you can specify in the preferences—they are not part of any project).
Clippings Services
Scrivener also makes some clipping features available via the global macOS Services menu. To enable them:
	1.	Open System Preferences.
	2.	Open the “Keyboard” pane of System Preferences.
	3.	Select the “Shortcuts” tab at the top.
	4.	Select “Services” in the sidebar.
	5.	Scroll down to the “Scrivener” services in the list and tick any that you wish to enable.
</Text>
        </Document>
        <Document ID="7C6A5CF9-DF49-44E4-803E-21290A6F8012">
            <Title>Index Card Images</Title>
            <Text>The index card in the inspector can be used to show an image instead of a synopsis. If an image is used instead of a synopsis, then the image will also be used on the corkboard. This could be useful if you have a document about a character and want a photo to represent the character on the corkboard, for instance.
To use an image in the index card for a document:
	1.	Open the Inspector.
	2.	Select the notes pane so that the synopsis and notes are displayed.
	3.	In the synopsis header bar, click on the icon of the picture. The synopsis area will be replaced with a grey area saying “Drop an image here.”
	4.	Locate the image you wish to use in the Finder and drag it into the grey area.
To switch back to the synopsis, click on the index card icon in the synopsis header bar (this will not remove the image, but just toggle back to displaying the synopsis).</Text>
        </Document>
        <Document ID="CA2F1450-D23F-42D7-B8B3-8DE3411C0090">
            <Title>Keywords</Title>
            <Text>When assigning keywords to documents from the keywords panel, you can simultaneously assign the groups to which they belong by holding down the Option key while dragging. Try this:
	1.	Open the inspector and select the Metadata tab, ensuring the Keywords pane is visible.
	2.	Open the keywords panel (Project &gt; Show Project Keywords).
	3.	Click on the triangle next to “Characters” in the panel to reveal the names of some characters.
	4.	If you were to drag one of these character keywords to the inspector keywords list, only the dragged keyword would be assigned. However, try holding down the Option key whilst dragging “John” to the inspector. Note how not only the keyword “John” gets added, but also the name of its group, “Characters”.</Text>
        </Document>
        <Document ID="C19C143F-1BCA-4008-AEF6-82E30C58689D">
            <Title>Tips</Title>
            <Synopsis>Some short tips that you can look at whenever you want.</Synopsis>
        </Document>
        <Document ID="14EC56C7-3A95-4D72-B5C6-769BAE050160">
            <Title>Viewing Snapshots in the Editor</Title>
            <Text>In “The Basics”, we looked at creating snapshots and viewing them in the inspector.
If you ever want more space to read through a snapshot, you can drag a snapshot from the list in the inspector onto the header view of the editor to load it there.
Try this now:
	1.	Split the editor.
	2.	Take a snapshot of this document (Cmd-5).
	3.	Write some text below:
	⁃	Type here: 
	4.	Open the inspector and switch to the snapshots pane if necessary.
	5.	Drag the snapshot you just took from the list in the inspector to the header bar of the other editor. The snapshot is now displayed in the other editor.
	6.	Now try dragging the snapshot from the inspector list again, but this time hold down Option on the keyboard as you drop it onto the header bar. The editor will now show the differences between the snapshot and the current version of the document.
</Text>
        </Document>
        <Document ID="313F2E57-20F9-422C-A92F-56220804AFEA">
            <Title>ss7-filter-rule</Title>
            <Text>SS7 Filter Rule
group = ss7-filte-rule
name = {object-name}
description = {text}
status = { on | off | monitor }
engine = {name-of-filter-engine}
pass-action = {name-of-filter-action}
drop-action = {name-of-filter-action}
reroute-action = {name-of-filter-action}
log-action = {name-of-filter-action}
engine-config = {config}

Defalt values for the actions are “pass”, “drop”, “reroute”,”log” 

As API calls
To add a new filtering rule
/api/filter-rule-add?name={name}
	&amp;description={description}&amp;status={status}
	&amp;engine={name-of-engine}
	&amp;pass-action={name-of-filter-action}
	&amp;drop-action={name-of-filter-action}
	&amp;reroute-action={name-of-filter-action}
	&amp;log-action={name-of-filter-action}
	&amp;engine-config={config}


To remove a filtering rule
/api/ss7-filter-rule-delete?name={name}

To activate a rule
/api/ss7-filter-rule-modify?name={name}&amp;status=on

To deactivate a rule
/api/ss7-filter-rule-modify?name={name}&amp;status=off


To put rule in monitoring mode
/api/ss7-filter-rule-modify?name={name}&amp;status=monitor

To read the list of  known rules in the config
/api/ss7-filter-rule-list

To read the current rules config
/api/ss7-filter-rule-read?name={name}

To read the current rule status
/api/filter-rule-status?name={name}

To send an action to the rule
/api/filter-rule-action?name={name}&amp;action={action}

</Text>
        </Document>
        <Document ID="0CE11253-E8F4-4D5A-ACAB-DE939245D6F5">
            <Title>sctp</Title>
            <Text>SCTP Config Options
group = sctp
name = {object-name}
name of the object. Internally converted to lowercase. only a-z, 0-9 and . - _ + , = allowed. Maximum length 255 characters.
description = {text}
descriptive text for internal documentation purposes

enable = {boolean}
If set to NO, then the whole section is completely ignored. Defaults to YES

log-level = {log-level}
log level has the following values:
0 = debug
1 = info
2 = warning
3 = minor
4 = major
5 = panic

log-file = {filename}
logfile name

local-ip = {ip-addresses}
local ip address or addresses, separated by space, tab or semicolon. Can be IPv4 as well as IPv6 addresses.  line can also appear multiple times.

local-port = {integer}
sctp port on the local side

remote-ip = {ip-address(es)}
local ip address or addresses, separated by space, tab or semicolon. Can be IPv4 as well as IPv6 addresses. line can also appear multiple times.

remote-port = {integer}
sccp port of the remote side

passive = {boolean}
If passive is set to YES, then no active outbound connection is established. but incoming connections are accepted. If passive is set to NO, the connection is established inbound and outbound. Defaults to NO

heartbeat = {seconds}
If heartbeat is set to a value above 0, the SCTP layer is instructed to run a heartbeat on the SCTP connection. The default is 30 seconds.

mtu = {bytes}
If mtu is set, the maximum packet size for outgoing IP packets is set to this value. Normally it is automatically negotiated. setting this value actually</Text>
        </Document>
        <Document ID="7B567107-6479-4738-9753-A408C9BACCAF">
            <Title>Saving UI Settings with Layouts</Title>
            <Text>If you find yourself opening and closing the binder and inspector frequently, or spending a lot of time setting up the corkboard or outliner view to appear in the right place for a particular task, check out the Layouts feature:
From the main menu, select Window &gt; Layouts &gt; Manage Layouts…
This allows you to save the state of the interface and quickly return to it at a later time, either via the layouts panel or the Window &gt; Layouts menu.
Layouts can also be accessed through the View button which appears on the very left of the toolbar by default. Several useful built-in Layouts are provided for you.</Text>
        </Document>
        <Document ID="0635F927-8EEF-4FD5-BF0C-164182D81343">
            <Title>Opening Bookmarks and Links</Title>
            <Text>By default, clicking on a document link opens it in the other editor; double-clicking the icon of a bookmark from the inspector list opens it in a Quick Reference panel.
You can change this behaviour and determine how you would like links and bookmarks to be opened as follows:
	1.	In the main menu, go to Scrivener &gt; Preferences…
	2.	Click on “Behaviors” in the toolbar.
	3.	Select “Document Links” in the sidebar.
You will be presented with a number of options that allow you to customise how document links and bookmarks are opened.</Text>
        </Document>
        <Document ID="B1A3F8BD-741C-4128-971C-FF37445A5CD5">
            <Title>Adding Project Bookmarks</Title>
            <Text>A quick way of adding documents to the project bookmarks list is by dragging them from the binder and dropping them onto the red “Bookmarks” toolbar icon.</Text>
        </Document>
        <Document ID="CAEC143A-CA50-4EFB-875A-6AF3B056A119">
            <Title>Printing</Title>
            <Text>You can print individual documents, the contents of the outliner, and index cards from the corkboard, by using File &gt; Print Current Document… in the main menu.
You can change various options pertaining to printing as follows:
	1.	In the main menu, go to File &gt; Page Setup…
	2.	From the pop-up menu that says “Page Attributes” at the top, select “Scrivener”.
</Text>
        </Document>
        <Document ID="5D6E24A0-1CA1-4370-A4C7-A6C0B79D9E8C">
            <Title>Drag Text to and from Binder</Title>
            <Text>Drag Text to the Binder
You can create new documents from sections of text in the editor as follows:
	1.	Select some text in the editor.
	2.	Click on the text and hold to begin a drag.
	3.	Drag the text into the binder.
A new document will be created containing the dragged text.
Drag Text from the Binder
You can insert the text of a binder document into another binder document like this:
	1.	In the editor, open the document into which you want to insert the text.
	2.	In the binder, locate the document whose text you wish to insert.
	3.	Drag the document from the binder into the editor, holding down the Option key on the keyboard as you drop.
The text of the document will be copied into the editor.</Text>
        </Document>
        <Document ID="34E08C43-0F95-488D-99CB-2195BBBB69C7">
            <Title>Backing Up</Title>
            <Text>Although Scrivener is designed to be as stable as possible, and its auto-save should ensure your work is constantly saved, with important writing projects it’s always a good idea to make regular backups, saved to either cloud services or external hard drives, so that your work is always safe no matter what happens.
Automatic Backups
By default, Scrivener will back up a project every time it is closed, and up to a maximum of five backups of each project will be kept around (with newer backups replacing older ones). You can change this behaviour and also choose the folder in which automatic backups are stored, as follows:
	1.	From the main menu, choose Scrivener &gt; Preferences…
	2.	Click on the “Backup” toolbar icon in the Preferences panel that appears. 
You will be presented with a number of options that allow you to determine when and how backups are made.
Click the “Choose…” button next to “Backup location” to change the automatic backups folder, and click the “Open backup folder…” button to open the folder currently used for backups in the Finder.
Manual Backups
There are two ways of manually creating a backup of a project:
	1.	Go to File &gt; Backup &gt; Back Up Now. This will create a new backup of the project in the automatic backups folder (as determined by the Preferences).
	2.	Go to File &gt; Back Up &gt; Back Up To… You will be presented with a chooser panel, allowing you to choose where the backup should be saved.
</Text>
        </Document>
        <Document ID="0012BC9E-4B00-4A74-AE17-630E4A8171AD">
            <Text>Terminology

A filter-engine is a piece of code which can do certain type of filtering.

A filter-config is a set of parameters which configure a filter-engine. Filter-config are specific to the engine type while they share some common parameters.

A filter-rule is a combination of a filter-engine with a specific filter-config

A filter-set is a list of filter-rules in a specific order.

An application-point is the point in the message flow where the filters are being placed on. It can be on a specific inbound link or on a specific outbound link or in the routing phase.

A filter-action is a trigger which is telling  the system what to do with this packet. Some filter-actions are exclusive (like route it to a specific output port) some could be applicable multiple times such as send a copy of the packet to a debug log A and to debug log B.


A named-list is a list of items with a name. Such a list can be used in multiple places for multiple different types.
For example you can make a list of specific numbers to monitor and refer to this list in multiple places through its name.

When a filter-set is put into action at an application-point, then the sequence of filter-rules is being processed and filter-actions are being collected and applied along the way.


The folowing section descripe the parameters of each object. The objects will be manageable by a generic API wihere the parameters are named exactly the same way.
</Text>
        </Document>
        <Document ID="B670E26B-2CFC-4870-936E-C3A94D4242A4">
            <Title>Key Concepts</Title>
            <Text>What is Scrivener?
Scrivener is aimed at writers of all stripes—novelists, journalists, academics, screenwriters, playwrights—who need to structure a long piece of text. It’s a ring-binder, a scrapbook, a corkboard, an outliner and a text editor that’s tailor-made for growing a manuscript.
Below you’ll find a brief survey of the key concepts behind Scrivener—the ideas that led me to put down my pen, learn programming, and create Scrivener in the first place.
Writing
Conventional word processors are wonderful for all kinds of things, but, because I like to jump around writing different sections as they come to me, I’ve always struggled with them when it comes to writing anything of length. Scrivener makes it easy to compose in any order you want, whether that’s from start to finish or completely at random.
Word processors only ever know about the document you’re working on at any one time—if you have numerous documents pertaining to a single project, it’s up to you to keep track of them. By contrast, each project you create in Scrivener can contain as many documents as you desire, allowing you to write in chunks as large or small as you wish. If you’re writing a novel, you can write each chapter in a separate document, or you can break it down further and write each scene in a different document—it’s up to you. When you come to export or print your work, all of those myriad sections can be compiled into a single document.
Research
Scrivener projects aren’t only for storing text. Much writing requires research, and you can import your research documents—images, PDF files, web pages, even movie and sound files—directly into Scrivener. You can then refer to your research right alongside your writing.
Outlining and Structuring
Every writer approaches the task of pulling together ideas in a different way. To that end, Scrivener allows you to choose whatever structure best fits your project, and to work with an overview of that structure.
Scrivener’s sidebar (the “binder”) shows a nested list of documents that can be expanded and collapsed, so that you can work with your whole outline or only subsections of it. Here you can create not only as many text files as you wish, but also folders to contain your text files, and you can have folders within folders within folders. You can even nest text files inside other text files: in Scrivener, a folder is simply a special type of text file, and you can freely convert between one and the other.
How you structure your project is for you to decide—you might have a folder for each chapter, containing text documents for each scene; you might have no folders and just use text documents for each chapter; you might do something completely different. There’s no right way or wrong way—only your way.
Every document in a Scrivener project is associated with a synopsis and notes (assigned using the inspector). Scrivener’s outliner and corkboard views show only the synopsis and title of each document, allowing you to step back and see the forest for the trees. You can assign synopses manually or leave them blank, in which case the first lines of the text are shown. This makes it easy to get an overview of your work, and to restructure it via drag and drop.
If the idea of outlines makes you shudder, never fear: Scrivener imposes no fixed approach to writing and outlining. You might start by creating a bunch of folders and empty text files, creating synopses for each one in the corkboard or outliner. Then you might go through and fill in the text files, referring to the synopses as a prompt for what you need to write. Conversely, you might write like crazy and worry about all the structural stuff only when your first draft is complete. In that case, you can just type away, creating new text documents as and when you feel like it, and you can split things apart and rearrange everything only much later in the process. Or you can use a combination of both methods.
So let’s dive in. In the binder sidebar, you will see a folder entitled “Draft”. Beneath this, indented, you will see “The Basics”, “Get Oriented”, “Main Interface” and more. To get started, click on “Main Interface”. </Text>
        </Document>
        <Document ID="17454FBE-71E8-491A-A0C8-144B81D37AAE">
            <Title>ss7-filter-engine</Title>
            <Text>SS7 Filter Engine 

In the config file:
group = ss7-filte-engine
name = {object-name} file = {filename} enable = {boolean}

As API calls
To add a new engine from a shared libary file:
/api/ss7-filter-engine-add?name={name}
	&amp;file={filename}

To remove an engine
/api/ss7-filter-engine-delete?name={name}

To activate an engine
/api/ss7-filter-engine-modify?name={name}&amp;enable=YES

To deactivate an engine
/api/ss7-filter-engine-modify?name={name}&amp;enable=NO

To list the current engine names
/api/ss7-filter-engine-list

To read the current engine config
/api/ss7-filter-engine-read?name={name}

To read the current engine status
/api/ss7-filter-engine-status?name={name}

To reload a new version of the engine file
	/api/ss7-filter-engine-action?name={name}&amp;action=reload
</Text>
        </Document>
        <Document ID="0BFF42D5-0065-4975-BFDF-62E8263F84AA">
            <Title>ss7-filter-engine-cap</Title>
            <Text>SS7 Filter engine “cap”
This filter engine wll check CAMEL messages
It compares current VLR and calling SCCP address
It is a stateful message as it has to remember the VLR (from previous UpdateLocation)
The configuration of this module is still under review. </Text>
        </Document>
        <Document ID="254B2586-524A-401C-91A3-2B16D17642AC">
            <Title>ss7-filter-rule</Title>
            <Text>SS7 Filter Rule
group = ss7-filte-rule
filter-ruleset = {object-name}
entry-nr = {integer}
description = {text}
status = { on | off | monitor }
engine = {name-of-filter-engine}
engine-config = {config}
filter-action-list = {action-list-name}
bypass-action-list = {action-list-name}
monitor-action-list = {action-list-name} 


As API calls
To add a new filtering rule
/api/filter-rule-add?filter-ruleset = {object-name}
	&amp;entry-nr={integer}
	&amp;description={description}
   &amp;status={status}
	&amp;engine={name-of-engine}
	&amp;engine-config={config}
	&amp;bypass-action-list={action-list-name}
	&amp;filter-action-list={action-list-name}
	&amp;monitor-action-list={action-list-name}

If  the conditions of the specific engine does match, then the actions are taken which are specified in the action list.


To remove a filtering rule
/api/ss7-filter-rule-delete?filter-ruleset={name}&amp;entry-nr={integer}

To activate a rule
/api/ss7-filter-rule-modify?filter-ruleset={name}&amp;entry-nr={integer}&amp;status=on

To deactivate a rule
/api/ss7-filter-rule-modify?filter-ruleset={name}&amp;entry-nr={integer}&amp;status=off


To put rule in monitoring mode
/api/ss7-filter-rule-modify?filter-ruleset={name}&amp;entry-nr={integer}
	&amp;status=monitor


In monitor mode, all actions do take the monitor-action-list instead of the active-action-list. If status is set to off, the bypass-action-list is taken which defaults to continue.
To read the list of  known rules in the config
/api/ss7-filter-rule-list=filter-ruleset={name}

To read the current rules config
/api/ss7-filter-rule-read?filter-ruleset={name}&amp;entry-nr={integer}

To read the current rule status
/api/filter-rule-status?filter-ruleset={name}&amp;entry-nr={integer}

To send an action to the rule
/api/filter-rule-action?filter-ruleset={name}&amp;entry-nr={integer}&amp;action={action}

</Text>
        </Document>
    </Documents>
</SearchIndexes>